{
  "version": 3,
  "file": "appbundle.css",
  "sources": [
    "../Datepicker.svelte",
    "../Month.svelte",
    "../NavBar.svelte",
    "../Popover.svelte",
    "../Week.svelte",
    "../SortableList.svelte",
    "../Accommodations.svelte",
    "../App.svelte",
    "../PDF.svelte",
    "../Record.svelte",
    "../Settings.svelte",
    "../Students.svelte",
    "../Write.svelte",
    "../Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { getMonths } from './lib/helpers';\n  import { formatDate, internationalize } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(1987, 9, 29);\n  export let end = new Date(2020, 9, 29);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n  export let weekStart = 0;\n  export let daysOfWeek = [\n    ['Sunday', 'Sun'],\n    ['Monday', 'Mon'],\n    ['Tuesday', 'Tue'],\n    ['Wednesday', 'Wed'],\n    ['Thursday', 'Thu'],\n    ['Friday', 'Fri'],\n    ['Saturday', 'Sat']\n  ];\n  export let monthsOfYear = [\n    ['January', 'Jan'],\n    ['February', 'Feb'],\n    ['March', 'Mar'],\n    ['April', 'Apr'],\n    ['May', 'May'],\n    ['June', 'Jun'],\n    ['July', 'Jul'],\n    ['August', 'Aug'],\n    ['September', 'Sep'],\n    ['October', 'Oct'],\n    ['November', 'Nov'],\n    ['December', 'Dec']\n  ];\n\n  export let style = '';\n  \n  // theming variables:\n  export let buttonBackgroundColor = '#fff';\n  export let buttonBorderColor = '#eee';\n  export let buttonTextColor = '#333';\n  export let highlightColor = '#f7901e';\n  export let dayBackgroundColor = 'none';\n  export let dayTextColor = '#4a4a4a';\n  export let dayHighlightedBackgroundColor = '#efefef';\n  export let dayHighlightedTextColor = '#4a4a4a';\n\n  internationalize({ daysOfWeek, monthsOfYear });\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\n    let dow = daysOfWeek.slice();\n    dow.push(dow.shift());\n    return dow;\n  })();\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback, weekStart);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n  $: wrapperStyle = `\n    --button-background-color: ${buttonBackgroundColor};\n    --button-border-color: ${buttonBorderColor};\n    --button-text-color: ${buttonTextColor};\n    --highlight-color: ${highlightColor};\n    --day-background-color: ${dayBackgroundColor};\n    --day-text-color: ${dayTextColor};\n    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};\n    --day-highlighted-text-color: ${dayHighlightedTextColor};\n    ${style}\n  `;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = typeof format === 'function'\n      ? format(selected)\n      : formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n    highlighted = new Date(year, month, 1);\n  }\n\n  function incrementMonth(direction, day = 1) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, day);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  const getDay = (m, d, y) => {\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\n    if (!theMonth) return null;\n    // eslint-disable-next-line\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\n      // eslint-disable-next-line\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\n        let aDay = theMonth.weeks[i].days[j];\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\n      }\n    }\n    return null;\n  };\n\n  function incrementDayHighlighted(amount) {\n    let proposedDate = new Date(highlighted);\n    proposedDate.setDate(highlighted.getDate() + amount);\n    let correspondingDayObj = getDay(\n      proposedDate.getMonth(),\n      proposedDate.getDate(),\n      proposedDate.getFullYear()\n    );\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\n    highlighted = proposedDate;\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      incrementMonth(-1, highlighted.getDate());\n    }\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\n    return proposedDay && proposedDay.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n\n</script>\n\n<div \n  class=\"datepicker\" \n  class:open=\"{isOpen}\" \n  class:closing=\"{isClosing}\"\n  style={wrapperStyle}\n>\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot {selected} {formattedSelected}>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar \n          {month}\n          {year}\n          {canIncrementMonth}\n          {canDecrementMonth}\n          {start}\n          {end}\n          {monthsOfYear}\n          on:monthSelected={e => changeMonth(e.detail)}\n          on:incrementMonth={e => incrementMonth(e.detail)} \n        />\n        <div class=\"legend\">\n          {#each sortedDaysOfWeek as day}\n          <span>{day[1]}</span>\n          {/each}\n        </div>\n        <Month \n          {visibleMonth}\n          {selected}\n          {highlighted}\n          {shouldShakeDate}\n          id={visibleMonthId}\n          on:dateSelected={e => registerSelection(e.detail)} \n        />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n.datepicker {\n  display: inline-block;\n  margin: 0 auto;\n  text-align: center;\n  overflow: visible;\n}\n\n.calendar-button {\n  padding: 10px 20px;\n  border: 1px solid var(--button-border-color);\n  display: block;\n  text-align: center;\n  width: 300px;\n  text-decoration: none;\n  cursor: pointer;\n  background: var(--button-background-color);\n  color: var(--button-text-color);\n  border-radius: 7px;\n  box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\n.calendar {\n  box-sizing: border-box;\n  position: relative;\n  overflow: hidden;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  width: 100vw;\n  padding: 10px;\n  padding-top: 0;\n}\n\n@media (min-width: 480px) {\n  .calendar {\n    height: auto;\n    width: 340px;\n    max-width: 100%;\n  }\n}\n\n.legend {\n  color: #4a4a4a;\n  padding: 10px 0;\n  margin-bottom: 5px;\n}\n\n.legend span {\n  width: 14.285714%;\n  display: inline-block;\n  text-align: center;\n}</style>\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\r\n\r\n<div class=\"month-container\">\r\n  {#each visibleMonth.weeks as week (week.id) }\r\n    <Week \r\n      days={week.days} \r\n      {selected} \r\n      {highlighted} \r\n      {shouldShakeDate} \r\n      {direction}\r\n      on:dateSelected \r\n    />\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n.month-container { \r\n  width: 100%;\r\n  display: -ms-grid;\r\n  display: grid;\r\n  -ms-grid-columns: 1fr;\r\n  -ms-grid-rows: 1fr;\r\n}</style>\r\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let year;\n  export let start;\n  export let end;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n  export let monthsOfYear;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthsOfYear.map((m, i) => {\n      return Object.assign({}, {\n        name: m[0],\n        abbrev: m[1]\n      }, {\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n          || (\n            (!isOnLowerBoundary || i >= start.getMonth())\n            && (!isOnUpperBoundary || i <= end.getMonth())\n          )\n      });\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, { m, i }) {\n    event.stopPropagation();\n    if (!m.selectable) return;\n    dispatch('monthSelected', i);\n    toggleMonthSelectorOpen();\n  }\n</script>\r\n\r\n<div class=\"title\">\r\n  <div class=\"heading-section\">\r\n    <div class=\"control\" \r\n      class:enabled={canDecrementMonth}\r\n      on:click={() => dispatch('incrementMonth', -1)}>\r\n      <i class=\"arrow left\"></i>\r\n    </div>\r\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\r\n      {monthsOfYear[month][0]} {year}\r\n    </div> \r\n    <div class=\"control\"\r\n      class:enabled={canIncrementMonth}\r\n      on:click={() => dispatch('incrementMonth', 1)}>\r\n      <i class=\"arrow right\"></i>\r\n    </div>\r\n  </div>\r\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\r\n    {#each availableMonths as monthDefinition, index}\r\n      <div \r\n        class=\"month-selector--month\" \r\n        class:selected={index === month}\r\n        class:selectable={monthDefinition.selectable}\r\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\r\n      >\r\n        <span>{monthDefinition.abbrev}</span>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n.heading-section { \r\n  font-size: 20px;\r\n  padding: 24px 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: #3d4548;\r\n  font-weight: bold;\r\n}\r\n.label { \r\n  cursor: pointer;\r\n}\r\n.month-selector { \r\n  position: absolute;\r\n  top: 75px; \r\n  left: 0; \r\n  right: 0; \r\n  bottom: 0; \r\n  background-color: #fff;\r\n  transition: all 300ms; \r\n  transform: scale(1.2); \r\n  opacity: 0; \r\n  visibility: hidden;\r\n  z-index: 1;\r\n  text-align: center;\r\n}\r\n.month-selector.open { \r\n  transform: scale(1); \r\n  visibility: visible;\r\n  opacity: 1;\r\n}\r\n.month-selector--month { \r\n  width: 31.333%; \r\n  margin: .5%; \r\n  height: 23%;\r\n  display: inline-block;\r\n  color: #4a4a4a;\r\n  border: 1px solid #efefef;\r\n  opacity: 0.2;\r\n}\r\n.month-selector--month.selectable { \r\n  opacity: 1; \r\n}\r\n.month-selector--month.selectable:hover { \r\n  cursor: pointer;\r\n  box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\r\n}\r\n.month-selector--month.selected { \r\n  background: var(--highlight-color);\r\n  color: #fff;\r\n}\r\n.month-selector--month:before { \r\n  content: ' ';\r\n  display: inline-block;\r\n  height: 100%;\r\n  vertical-align: middle;\r\n}\r\n.month-selector--month span { \r\n  vertical-align: middle; \r\n  display: inline-block;\r\n}\r\n\r\n.control { \r\n  padding: 0 8px;\r\n  opacity: 0.2;\r\n  transform: translateY(3px);\r\n}\r\n\r\n.control.enabled { \r\n  opacity: 1; \r\n  cursor: pointer;\r\n}\r\n\r\n.arrow {\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  border-style: solid;\r\n  border-color: #a9a9a9;\r\n  border-width: 0;\r\n  border-bottom-width: 2px;\r\n  border-right-width: 2px;\r\n}\r\n\r\n.arrow.right {\r\n  transform: rotate(-45deg);\r\n  -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.arrow.left {\r\n  transform: rotate(135deg);\r\n  -webkit-transform: rotate(135deg);\r\n}</style>\r\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\r\n      if (el === popover) return;\n    // eslint-disable-next-line\n    } while (el = el.parentNode);\r\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\r\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\r\n\r\n<svelte:window bind:innerWidth={w} />\r\n<div class=\"sc-popover\" bind:this={popover}>\r\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\r\n    <slot name=\"trigger\">\r\n    </slot>\r\n  </div>\r\n  <div \r\n    class=\"contents-wrapper\" \r\n    class:visible={open}\r\n    class:shrink={shrink}\r\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \r\n    bind:this={contentsWrapper}>\r\n    <div class=\"contents\" bind:this={contentsAnimated}>\r\n      <div class=\"contents-inner\">\r\n        <slot name=\"contents\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n.sc-popover { \r\n  position: relative;\r\n}\r\n\r\n.contents-wrapper { \r\n  transform: translate(-50%, -50%); \r\n  position: absolute;\r\n  top: 50%; \r\n  left: 50%; \r\n  transition: none;\r\n  z-index: 2;\r\n  display: none;\r\n}\r\n\r\n.contents { \r\n  background: #fff;\r\n  box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\r\n  opacity: .8; \r\n  padding-top: 0;\r\n  display: none;\r\n  -webkit-animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\r\n          animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\r\n}\r\n\r\n.contents-inner { \r\n  -webkit-animation: fadeIn 400ms forwards; \r\n          animation: fadeIn 400ms forwards;\r\n}\r\n\r\n.contents-wrapper.visible { \r\n  display: block;\r\n}\r\n\r\n.contents-wrapper.visible .contents { \r\n  opacity: 1; \r\n  transform: scale(1);\r\n  display: block;\r\n}\r\n\r\n.contents-wrapper.shrink .contents { \r\n  -webkit-animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05); \r\n          animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\r\n}\r\n\r\n@-webkit-keyframes grow { \r\n  0% { \r\n    transform: scale(.9,.1); \r\n    opacity: 0; \r\n  }\r\n  30% { \r\n    opacity: 1; \r\n  }\r\n  100% { \r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n@keyframes grow { \r\n  0% { \r\n    transform: scale(.9,.1); \r\n    opacity: 0; \r\n  }\r\n  30% { \r\n    opacity: 1; \r\n  }\r\n  100% { \r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n@-webkit-keyframes shrink { \r\n  0% { \r\n    transform: scale(1); \r\n    opacity: 1; \r\n  }\r\n  70% { \r\n    opacity: 1; \r\n  }\r\n  100% { \r\n    opacity: 0; \r\n    transform: scale(.9,.1);\r\n  }\r\n}\r\n\r\n@keyframes shrink { \r\n  0% { \r\n    transform: scale(1); \r\n    opacity: 1; \r\n  }\r\n  70% { \r\n    opacity: 1; \r\n  }\r\n  100% { \r\n    opacity: 0; \r\n    transform: scale(.9,.1);\r\n  }\r\n}\r\n\r\n@-webkit-keyframes fadeIn { \r\n  0% { \r\n    opacity: 0; \r\n  }\r\n  50% { \r\n    opacity: 0;\r\n  }\r\n  100% { \r\n    opacity: 1; \r\n  }\r\n}\r\n\r\n@keyframes fadeIn { \r\n  0% { \r\n    opacity: 0; \r\n  }\r\n  50% { \r\n    opacity: 0;\r\n  }\r\n  100% { \r\n    opacity: 1; \r\n  }\r\n}</style>\r\n",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\r\n\r\n<div \r\n  class=\"week\" \r\n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\r\n  out:fade|local={{ duration: 180 }}\r\n>\r\n  {#each days as day}\r\n    <div \r\n      class=\"day\" \r\n      class:outside-month={!day.partOfMonth}\r\n      class:is-today={day.isToday}\r\n      class:is-disabled={!day.selectable}\r\n    >\r\n      <button \r\n        class=\"day--label\" \r\n        class:selected={areDatesEquivalent(day.date, selected)}\r\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\r\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\r\n        class:disabled={!day.selectable}\r\n        type=\"button\"\r\n        on:click={() => dispatch('dateSelected', day.date)}\r\n      >\r\n        {day.date.getDate()}\r\n      </button>\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n.week { \r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-flow: row;\r\n  justify-content: space-around;\r\n  -ms-grid-column: 1;\r\n  grid-column: 1; \r\n}\r\n.week:nth-child(6n + 1) { \r\n  -ms-grid-row: 1; \r\n  grid-row: 1; \r\n}\r\n.week:nth-child(6n + 2) { \r\n  -ms-grid-row: 2; \r\n  grid-row: 2; \r\n}\r\n.week:nth-child(6n + 3) { \r\n  -ms-grid-row: 3; \r\n  grid-row: 3; \r\n}\r\n.week:nth-child(6n + 4) { \r\n  -ms-grid-row: 4; \r\n  grid-row: 4; \r\n}\r\n.week:nth-child(6n + 5) { \r\n  -ms-grid-row: 5; \r\n  grid-row: 5; \r\n}\r\n.week:nth-child(6n + 6) { \r\n  -ms-grid-row: 6; \r\n  grid-row: 6; \r\n}\r\n.day { \r\n  margin: 2px;\r\n  color: var(--day-text-color);\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  flex: 1 0 auto;\r\n  height: auto;\r\n  display: flex; \r\n  flex-basis: 0;\r\n}\r\n.day.outside-month, \r\n.day.is-disabled { \r\n  opacity: 0.35;\r\n}\r\n.day:before { \r\n  content: '';\r\n  float: left;\r\n  padding-top: 100%;\r\n}\r\n.day--label { \r\n  color: var(--day-text-color);\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  position: relative;\r\n  border: 1px solid #fff;\r\n  border-radius: 50%; \r\n  margin: 10%;\r\n  padding: 0;\r\n  align-items: center;\r\n  background: var(--day-background-color);\r\n  cursor: pointer;\r\n  transition: all 100ms linear;\r\n  font-weight: normal;\r\n}\r\n.day--label.disabled { \r\n  cursor: default;\r\n}\r\n@media (min-width: 480px) { \r\n  .day--label.highlighted,\r\n  .day--label:not(.disabled):hover { \r\n    background: var(--day-highlighted-background-color);\r\n    border-color: var(--day-highlighted-background-color);\r\n    color: var(--day-highlighted-text-color);\r\n  }\r\n}\r\n.day--label.shake-date { \r\n  -webkit-animation: shake 0.4s 1 linear; \r\n          animation: shake 0.4s 1 linear;\r\n}\r\n.day--label.selected:hover,\r\n.day--label.selected,\r\n.day--label:active:not(.disabled) { \r\n  background-color: var(--highlight-color);\r\n  border-color: var(--highlight-color);\r\n  color: #fff;\r\n}\r\n.day.is-today .day--label, \r\n.day.is-today .day--label:hover { \r\n  opacity: 1; \r\n  background: none;\r\n  border-color: var(--highlight-color);\r\n  color: #000;\r\n}\r\n\r\n@-webkit-keyframes shake {\r\n  0% { transform: translate(7px); }\r\n  20% { transform: translate(-7px); }\r\n  40% { transform: translate(3px); }\r\n  60% { transform: translate(-3px); }\r\n  80% { transform: translate(1px); }\r\n  100% { transform: translate(0px); }\r\n}\r\n\r\n@keyframes shake {\r\n  0% { transform: translate(7px); }\r\n  20% { transform: translate(-7px); }\r\n  40% { transform: translate(3px); }\r\n  60% { transform: translate(-3px); }\r\n  80% { transform: translate(1px); }\r\n  100% { transform: translate(0px); }\r\n}</style>\r\n",
    "<script>\n  import { quintOut } from \"svelte/easing\";\n  import { crossfade } from \"svelte/transition\";\n  import { flip } from \"svelte/animate\";\n\n  // FLIP ANIMATION\n  const [send, receive] = crossfade({\n    duration: d => Math.sqrt(d * 200),\n\n    fallback(node, params) {\n      const style = getComputedStyle(node);\n      const transform = style.transform === \"none\" ? \"\" : style.transform;\n\n      return {\n        duration: 600,\n        easing: quintOut,\n        css: t => `\n\t\t\t\t\ttransform: ${transform} scale(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n      };\n    }\n  });\n\n  // DRAG AND DROP\n  let isOver = false;\n  const getDraggedParent = node =>\n    (node.dataset.index && node.dataset) || getDraggedParent(node.parentNode);\n  const start = ev => {\n    ev.dataTransfer.setData(\"source\", ev.target.dataset.index);\n  };\n  const over = ev => {\n    ev.preventDefault();\n    let dragged = getDraggedParent(ev.target);\n    if (isOver !== dragged.id) isOver = JSON.parse(dragged.id);\n  };\n  const leave = ev => {\n    let dragged = getDraggedParent(ev.target);\n    if (isOver === dragged.id) isOver = false;\n  };\n  const drop = ev => {\n    isOver = false;\n    ev.preventDefault();\n    let dragged = getDraggedParent(ev.target);\n    let from = ev.dataTransfer.getData(\"source\");\n    let to = dragged.index;\n    reorder({ from, to });\n  };\n\n  // DISPATCH REORDER\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n  const reorder = ({ from, to }) => {\n    let newList = [...list];\n    newList[from] = [newList[to], (newList[to] = newList[from])][0];\n\n    dispatch(\"sort\", newList);\n  };\n\n  // UTILS\n  const getKey = item => (key ? item[key] : item);\n\n  // PROPS\n  export let list;\n  export let key;\n</script>\n\n<style>\nul {\n  list-style: none;\n  padding: 0;\n}\nli {\n  border: 2px dotted transparent;\n  transition: border 0.1s linear;\n}\n.over {\n  border-color: rgba(48, 12, 200, 0.2);\n}</style>\n\n{#if list && list.length}\n  <ul>\n    {#each list as item, index (getKey(item))}\n      <li\n        data-index={index}\n        data-id={JSON.stringify(getKey(item))}\n        draggable=\"true\"\n        on:dragstart={start}\n        on:dragover={over}\n        on:dragleave={leave}\n        on:drop={drop}\n        in:receive={{ key: getKey(item) }}\n        out:send={{ key: getKey(item) }}\n        animate:flip={{ duration: 300 }}\n        class:over={getKey(item) === isOver}>\n        <slot {item} {index}>\n          <p>{getKey(item)}</p>\n        </slot>\n      </li>\n    {/each}\n  </ul>\n{/if}\n",
    "<script>\n    import { onMount } from 'svelte'\n    import { fly, scale } from 'svelte/transition'\n    import {abbreviate, loadAccommodations, saveAccommodation, removeAccommodation} from './logic/data.js'\n    import Fuse from 'fuse.js'\n    import { settings, formatText } from './store.js'\n\n    import Modal from \"./widgets/Modal.svelte\"\n\n    let accoms = []\n    let searchResults = []\n\n    let accomCreatorOpen = false\n    let showConfirmModal = false\n    let showDeleteConfirmModal = false\n\n    let searchTimeout = null\n    let searchBox = null\n    let accomContentHighlighted = false\n\n    let newAccom = {\n        name: \"\",\n        content: \"\"\n    }\n    let toDelete = \"\"\n\n    let fuse = null\n\n    let save = ()=> {\n        saveAccommodation(newAccom, $settings.databasedir).then(()=>{\n            loadAccommodations($settings.databasedir).then((accomsLoaded)=>{\n                accoms = accomsLoaded\n                accomCreatorOpen = false\n                newAccom = { name: \"\", content: \"\" }\n                fuse = new Fuse(accoms, { keys: [\"name\", \"content\"] })\n                searchTime(searchBox.value)\n            })\n        })\n    }\n\n    let searchTime = (search)=> {\n        if(searchTimeout) clearTimeout(searchTimeout)\n        searchTimeout = setTimeout(()=>{\n            if(search == \"\")\n                searchResults = accoms\n            else\n                searchResults = fuse.search(search)\n        }, 600)\n    }\n\n    let removeAccom = (id)=> {\n        toDelete = id\n        showConfirmModal = true\n    }\n\n    let deleteConfirm = (id) => {\n        removeAccommodation(id, $settings.databasedir).then(()=>{\n            toDelete = \"\"\n            showDeleteConfirmModal = true\n            showConfirmModal = false\n\n            loadAccommodations($settings.databasedir).then((accomsLoaded)=>{\n                accoms = accomsLoaded\n                accomCreatorOpen = false\n                newAccom = { name: \"\", content: \"\" }\n                fuse = new Fuse(accoms, { keys: [\"name\", \"content\"] })\n                searchTime(searchBox.value)\n            })\n        })\n    }\n\n    onMount(()=>{\n        loadAccommodations($settings.databasedir).then((accomsLoaded)=>{\n            accoms = accomsLoaded\n            searchResults = accoms\n\n            fuse = new Fuse(accoms, { keys: [\"name\", \"content\"] })\n        })\n    })\n\n</script>\n\n<style>\n\n#new-accom-form .in { margin-left: .5em; }\n#new-accom-form textarea { display: block; margin: 0; min-height: 15vh; }\n\n.form-halves2 {\n    margin-left: .5em;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: .5em;\n}\n\n.form-halves2 label {\n    margin-right: 1em;\n}\n\n.form-halves2 input {\n    flex-grow: 2;\n}\n\n.accom-content-wrapper {\n    position: relative;\n}\n\n.extend {\n    width: 20em;\n}</style>\n\n<div style='position: relative;' in:fly={{x: 100, delay: 500}} out:fly={{x: 100}}>\n    <div class='switchable'>\n        <h2>{formatText($settings.services, true, true)}</h2>\n    </div>\n    <div class='form-halves'>\n        <label for=\"search\">Find: </label>\n        <input bind:this={searchBox} type=\"text\" id='search' on:keyup={()=>{searchTime(searchBox.value)}}>\n    </div>\n    <div>Search by {formatText($settings.services, false, false)} title or description.</div>\n\n    <div class=\"mt-2 mb-1\">\n        <a href=\"newAccom\" on:click|preventDefault={()=>{accomCreatorOpen = true}}>New {formatText($settings.services, false, false)}</a>\n    </div>\n    \n    {#if searchResults.length}\n        {#each searchResults as accom}\n            <div class='accommodation whitebox'>\n                <h4>{accom.name}</h4>\n                <p>{abbreviate(accom.content, 200)}</p>\n                <div class='close' on:click={()=>{ removeAccom(accom._id) }}>&times;</div>\n                <div class='close edit' on:click={()=>{ newAccom = accom; accomCreatorOpen = true }}>&#9998;</div>\n            </div>\n        {/each}\n    {:else}\n        <p>No {formatText($settings.services, true, false)} found. :-(</p>\n    {/if}\n</div>\n\n{#if accomCreatorOpen}\n    <Modal on:forceClose={()=>{ accomCreatorOpen = false; newAccom = { name: \"\", content: \"\" } }}>\n        <h3 class='extend'>{formatText($settings.services, false, true)} Details</h3>\n        <form id='new-accom-form'>\n            <div class=\"form-halves2\">\n                <label for='name'>Name</label>\n                <input type=\"text\" id='name' bind:value={newAccom.name}>\n            </div>\n            <div class=\"in\">\n                <label for=\"content\">Content</label><br/>\n                <div class=\"accom-content-wrapper\">\n                    {#if accomContentHighlighted}\n                        <div transition:scale class='remaining-characters'>\n                            { newAccom.content.length ? 1200 - newAccom.content.length : 1200}\n                        </div>\n                    {/if}\n                    <textarea type=\"text\" id='content' bind:value={newAccom.content} rows=\"5\" maxlength=\"1200\" on:focus={()=>{accomContentHighlighted = true}} on:blur={()=>{accomContentHighlighted = false}}></textarea>\n                </div>\n            </div>\n\n            <button class='centered blue' type='submit' on:click|preventDefault={()=> {save(); accomCreatorOpen = false} }>OK</button>\n        </form>\n    </Modal>\n{/if}\n\n{#if showConfirmModal}\n    <Modal on:forceClose={()=>{ showConfirmModal = false; toDelete = \"\" }}>\n        <h3>Are you sure?</h3>\n        <p>If you delete this {formatText($settings.services, false, false)}, it will not be recoverable. This will not affect {formatText($settings.students, false, false)}'s committed {formatText($settings.services, false, false)} history.</p>\n        <div class=\"align-ends\">\n            <button class='centered' type='submit' on:click|preventDefault={()=> { deleteConfirm(toDelete) }}>Delete it</button>\n            <button class='centered blue' type='submit' on:click|preventDefault={()=> {  showConfirmModal = false; toDelete = \"\" } }>Never mind</button>\n        </div>\n    </Modal>\n{/if}\n\n{#if showDeleteConfirmModal}\n    <Modal on:forceClose={()=>{ showDeleteConfirmModal = false }}>\n        <h3>All done!</h3>\n        <p>The indicated {formatText($settings.services, false, false)} has been removed from the list.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={()=> {  showDeleteConfirmModal = false } }>OK</button>\n    </Modal>\n{/if}",
    "<script>\n    import { onMount } from 'svelte'\n    import { fade, fly } from 'svelte/transition'\n    import Write from './Write.svelte'\n    import Students from './Students.svelte'\n    import Accommodations from './Accommodations.svelte'\n    import Settings from './Settings.svelte'\n    import Record from './Record.svelte'\n    import LOATemplate from './LOATemplate.svelte'\n    import Reports from './Reports.svelte'\n    import {settings, formatText} from './store.js'\n    import Modal from './widgets/Modal.svelte'\n\n    let showAuthModal = false\n    let showPassModal = false\n\n    let curPassword = \"\"\n    let pagePasswords = \"\"\n    let pageBuffer = \"\"\n\n    let page = {\n        '#write': Write,\n        \"#students\": Students,\n        '#accommodations': Accommodations,\n        '#record': Record,\n        '#settings': Settings,\n        \"#pdf\": LOATemplate,\n        \"#reports\": Reports\n    }\n\n    let viewarea\n    let curPage = \"\"\n\n    let checkForPagePassword = (page)=> {\n        let pwords = []\n\n        if($settings.passwords && Array.isArray($settings.passwords)) {\n            $settings.passwords.forEach(pw=>{\n                if(pw) {\n                    pw.pages.forEach(p=>{\n                        if(p.value == page) pwords.push(pw.password)\n                    })\n                }\n            })\n        }\n\n        return pwords\n    }\n\n    let changePage = (page, prompt = true)=> {\n        pagePasswords = checkForPagePassword(page)\n        showPassModal = false\n\n        //Check if the page is included in any password pages list\n        if(pagePasswords.length > 0) {\n            if(curPassword && pagePasswords.includes(curPassword))\n                curPage = page\n            else if(prompt) { \n                showPassModal = true\n                pageBuffer = page\n            }\n            else {\n                showAuthModal = true\n                window.location.hash =  \"\"\n            }\n        }\n        else curPage = page\n    }\n\n    window.onhashchange = ()=>{\n        changePage(window.location.hash.split('/')[0])\n    }\n\n    onMount(()=> {\n        window.location.hash = '#'\n        setTimeout(()=>{\n            window.location.hash = '#write'\n        }, 300)\n\n        changePage('#write')\n    })\n</script>\n\n<style>\n#main {\n    display: -ms-grid;\n    display: grid;\n    width: 100%; height: 100vh;\n    -ms-grid-columns: auto 1fr;\n    grid-template-columns: auto 1fr;\n    -ms-grid-rows: auto 1fr;\n    grid-template-rows: auto 1fr;\n    align-content: stretch;\n    grid-column-gap: 2em;\n    margin: 0; padding: 0;\n}\n\n#main .inner {\n    padding-bottom: 4em;\n    background-image: url(\"./images/hexagons.svg\");\n    background-position: 0 5%;\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n\n@media screen and (min-width: 1000px) {\n    #main .constrain {\n        margin-left: 10%;\n    }\n}\n\n#header {\n    -ms-grid-column: 1;\n    -ms-grid-column-span: 2;\n    grid-column: 1 / span 2;\n    padding: 0;\n    text-align: center;\n    color: #C33C54;\n    background-color: #8EE3EF;\n    background: linear-gradient(0deg, #6adfee 0%,rgb(167, 230, 238) 100%);\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    box-shadow: 0 0 3px rgba(0,0,0,.5);\n    z-index: 1;\n}\n\n#header h1 {\n    margin: .5em 0;\n}\n\n#logo {\n    max-width: 3em;\n    max-height: 3em;\n    margin-right: 1em;\n}\n\nnav {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 2em;\n    background-color: #254E70;\n    width: 20em;\n    max-width: 25vw;\n    color: #8EE3EF;\n    z-index: 1;\n}\n\nnav li a {\n    display: block;\n    font-weight: bold;\n    color: #8EE3EF;\n    padding: .5em;\n    border-radius: .25em;\n}\n\nnav ul {\n    list-style-type: none;\n    margin: 0; padding: 2em 1em;\n    position: relative;\n    margin-top: 1em;\n}\n\nnav li {\n    margin: .5em 0;\n    border-radius: .25em;\n}\n\nnav li.active {\n    background-color: #37718E;\n}\n\nnav li:hover {\n    background-color: #8EE3EF;\n    color: #C33C54;\n}\n\nnav li:hover a {\n    color: #C33C54;\n}\n\n#menucurl {\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: -1px;\n}\n\n.constrain {\n    max-width: 40em;\n}\n\n:global(h1, h2, h3, h4) {\n    margin-bottom: .5em;\n    margin-top: 1.5em;\n    font-family: 'Montserrat', sans-serif;\n}\n\n:global(h1) {\n    font-size: 3em;\n    color: #C33C54;\n}\n\n:global(h2) {\n    font-size: 2em;\n    color: #C33C54;\n}\n\n:global(h3) {\n    font-size: 1.5em;\n    color: #37718E;\n}\n\n:global(h4) {\n    font-size: 1em;\n    font-weight: bold;\n    color: black;\n}\n\n:global(label) {\n    margin-right: 1em;\n    margin-bottom: .5em;\n}\n\n:global(.form-halves) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 20em;\n    margin-bottom: .5em;\n    border-radius: .25em;\n    padding: .1em .5em;\n    position: relative;\n    left: -.5em;\n}\n\n:global(.form-halves:hover) {\n    background-color: #8EE3EF;\n}\n\n:global(.form-halves label) {\n    margin-bottom: 0;\n}\n\n:global(input, textarea) {\n    padding: .2em .5em;\n    font-size: 1em;\n    border-radius: .25em;\n    box-shadow: none;\n    border-width: 1px;\n    background-color: rgba(255,255,255,.5);\n}\n\n:global(.form-halves:hover input, input:hover, textarea:hover, input:focus, textarea:focus) {\n    background-color: white;\n    border-color: #37718E;\n}\n\n:global(input, textarea, button) {\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n}\n\n:global(a, button.just-text) {\n    color: #C33C54;\n    cursor: pointer;\n}\n\n:global(a:hover, button.just-text:hover) {\n    text-decoration: underline;\n}\n\n:global(.mt-0) {\n    margin-top: 0;\n}\n\n:global(.mt-2) {\n    margin-top: 2em;\n}\n\n:global(.mb-1) {\n    margin-bottom: 1em;\n}\n\n:global(button.just-text:focus) {\n    border: none;\n}\n\n:global(textarea) {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n:global(input:disabled) {\n    border-color: gray;\n    color: gray;\n}\n\n:global(.contents-wrapper) {\n    position: fixed !important;\n}\n\n:global(button[type=submit]) {\n    border: none;\n    border-radius: .25em;\n    background-color: #C33C54;\n    color: white;\n    padding: .5em;\n    display: block;\n    font-weight: bold;\n    margin: 1em 0;\n    font-size: 1em;\n    cursor: pointer;\n}\n\n:global(button[type=submit].centered) {\n    margin: 1em auto;\n}\n\n:global(div.centered) {\n    text-align: center;\n}\n\n:global(button.blue) {\n    background-color: #37718E;\n}\n\n:global(button:hover) {\n    -webkit-filter: brightness(1.2);\n            filter: brightness(1.2);\n}\n\n:global(.align-ends) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n:global(.align-ends button[type=submit]) {\n    margin: 1em .5em;\n}\n\n:global(.close) {\n    position: absolute;\n    top: 0;\n    right: .5em;\n    color: gray;\n    font-size: 2em;\n    cursor: pointer;\n}\n\n:global(.edit) {\n    font-size: 1.1em;\n    right: 2em;\n    top: .4em;\n}\n\n:global(.close:hover) {\n    color: #C33C54;\n}\n\n:global(.whitebox) {\n    border-radius: 5px;\n    padding: .5em;\n    background-color: rgba(255,255,255,.5);\n    border-color: gray;\n    border-width: 1px;\n    border-style: solid;\n    margin: 0 0 .5em 0;\n    padding-right: 3em;\n    position: relative;\n    width: 100%;\n    box-sizing: border-box;\n}\n\n:global(.whitebox:hover) {\n    background-color: white;\n    border-color: #37718E;\n}\n\n:global(.whitebox h4) {\n    margin-top: 0;\n    padding-right: 1em;\n}\n\n:global(.whitebox p) {\n    margin: 0;\n}\n\n:global(.remaining-characters) {\n    position: absolute;\n    top: -1.5em;\n    right: .5em;\n    z-index: 1;\n    border-radius: .25em;\n    padding: .5em;\n    background-color: #8EE3EF;\n    color: #C33C54;\n    font-weight: bold;\n    border-color: #C33C54;\n    border-width: 1px;\n    border-style: solid;\n}\n\n:global(#accoms-list) {\n    list-style: none;\n    padding-left: 0;\n    width: 100%;\n}\n\n:global(.loading) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 90vh;\n}\n\n:global(.inline button) {\n    display: inline;\n    margin-right: 1em;\n}\n\n:global(h1 + h2, h2 + h3) {\n    margin-top: 0;\n}</style>\n\n<section id=\"main\">\n    <div id=\"header\">\n        <svg id='logo' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"174\" height=\"200\" viewbox=\"0 0 173.20508075688772 200\" style=\"filter: drop-shadow(rgba(255, 255, 255, 0.5) 0px 0px 10px);\"><path fill=\"#C33C54\" d=\"M86.60254037844386 0L173.20508075688772 50L173.20508075688772 150L86.60254037844386 200L0 150L0 50Z\"></path></svg>\n        <h1>Accommodate</h1>\n    </div>\n    <nav>\n        <svg id='menucurl' viewBox=\"0 0 200 50\"><g transform=\"translate(0,-247)\"><path d=\"M 0,247 H 200 C 87.745309,251.08461 12.341004,241.11661 0,297 Z\" style=\"opacity:1;fill:#6adfee;fill-opacity:1;stroke:none;stroke-width:0.26499999;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"/></g></svg>\n        <ul>\n            <li class:active={curPage == '#write'}><a href='#write'>Write {formatText($settings.abbrev, false, false, true)}</a></li>\n            <li class:active={curPage == '#students' || curPage == '#record'}><a href='#students'>{formatText($settings.students, true, true)}</a></li>\n            <li class:active={curPage == '#accommodations'}><a href='#accommodations'>{formatText($settings.services, true, true)}</a></li>\n            <li class:active={curPage == '#pdf'}><a href='#pdf'>{formatText($settings.abbrev, false, false, true)} Template</a></li>\n            <li class:active={curPage == '#settings'}><a href='#settings'>Settings</a></li>\n            <!-- <li class:active={curPage == '#reports'}><a href='#reports'>Reports</a></li> -->\n        </ul>\n    </nav>\n    <div class=\"inner\" bind:this={viewarea}>\n        <div class=\"constrain\">\n            <svelte:component this={page[curPage]} on:scrollUp={()=>{ viewarea.scrollTop = 0 }}/>\n        </div>\n    </div>\n</section>\n\n{#if showAuthModal}\n    <Modal on:forceClose={()=>{ showAuthModal = false }}>\n        <h3>Unauthorized</h3>\n        <p>You are not authorized to view this content based on the password you provided.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={ ()=> {showAuthModal = false} }>OK</button>\n    </Modal>\n{/if}\n\n{#if showPassModal}\n    <Modal on:forceClose={()=>{ showPassModal = false }}>\n        <h3>Password</h3>\n        <p>Enter a password to view this content.</p>\n        <div class=\"inline centered\">\n            <input type=\"password\" bind:value={curPassword}><br>\n            <button class='blue' type='submit' on:click|preventDefault={ ()=> { changePage(pageBuffer, false) } }>OK</button>\n            <button type='submit' on:click|preventDefault={ ()=> {showPassModal = false} }>Cancel</button>\n        </div>\n    </Modal>\n{/if}",
    "<script>\n    import { fly, scale } from 'svelte/transition'\n    import {onMount, onDestroy} from 'svelte'\n    import { settings, formatText } from './store.js'\n    import { createEventDispatcher } from 'svelte';\n    const dispatch = createEventDispatcher()\n    export let pdfSettings\n\n    let editor\n    let table\n    let addTable\n    let tiny = tinymce\n    export let content\n\n    function insertVariable(content) {\n        tiny.get(\"editor\").execCommand(\"mceInsertContent\", false, content)\n    }\n\n    onMount(()=>{\n        tinymce.init({\n            selector: \"#editor\",\n            plugins:  `\n                paste autolink directionality code \n                image link media \n                codesample table hr anchor toc insertdatetime advlist \n                lists imagetools textpattern\n            `,\n            menubar: false,\n            toolbar: `\n                undo redo | fontselect fontsizeselect forecolor\n                formatselect blockquote | bold italic underline | \n                alignleft aligncenter alignright | hr insertdatetime | link image | \n                outdent indent | numlist bullist | table tabledelete | \n                tableprops tablerowprops tablecellprops | \n                tableinsertrowbefore tableinsertrowafter tabledeleterow | \n                tableinsertcolbefore tableinsertcolafter tabledeletecol\n            `,\n            placeholder: pdfSettings.placeholder,\n            inline_styles: true\n        })\n    })\n\n    onDestroy(()=> {\n        tiny.get(\"editor\").destroy()\n    })\n        \n</script>\n\n<style>\n#container {\n    margin-top: 2em;\n    width: 612pt;\n}\n\n#editor {\n    background-color: white;\n    min-height: 100pt;\n    max-height: 300pt;\n    overflow-y: auto;\n}\n\n.inline button {\n    display: inline;\n    margin: 1em 0;\n}\n\n.variableButton {\n    padding: .25em .5em;\n    background-color: gray;\n    color: white;\n    font-weight: bold;\n    border-radius: 5px;\n    margin: 0 .25em;\n}\n\n.variableButton:hover {\n    cursor: pointer;\n    background-color: lightgray;\n    color: black;\n}</style>\n\n<!-- <h3>Editing \"{pdfSettings.editing}\"</h3>\n{#if pdfSettings.editing == 'header'}\n    <p>The header appears at the top of each page.</p>\n{:else if pdfSettings.editing == 'footer'}\n    <p>The footer appears at the bottom of each page.</p>\n{/if} -->\n\n<p>Variables: \n    <span on:click={()=> {insertVariable(\"${first name}\")}} class='variableButton'>First name</span>\n    <span on:click={()=> {insertVariable(\"${last name}\")}} class='variableButton'>Last name</span>\n    <span on:click={()=> {insertVariable(\"${id}\")}} class='variableButton'>ID</span>\n    <span on:click={()=> {insertVariable(\"${date}\")}} class='variableButton'>Date</span>\n    <span on:click={()=> {insertVariable(\"${\" + formatText($settings.services, true, false) + \"}\")}} class='variableButton'>{formatText($settings.services, true, true)}</span>\n    <span on:click={()=> {insertVariable(\"${\" + formatText($settings.students, false, false) + \" notes}\")}} class='variableButton'>{formatText($settings.students, false, true)} notes</span>\n</p>\n\n<div id=\"container\">\n    <div id='editor'>{@html content}</div>\n</div>\n\n<div class='inline'>\n    <button class='blue' type='submit' on:click|preventDefault={()=> {dispatch('save', tiny.get(\"editor\").getContent()); dispatch('forceClose')} }>Save</button>\n    <button class='blue' type='submit' on:click|preventDefault={()=> {dispatch('preview')}}>Preview</button>\n    <button type='submit' on:click|preventDefault={()=> {dispatch('forceClose')} }>Cancel</button>\n</div>",
    "<script>\n    import { onMount } from 'svelte'\n    import { fly, scale } from 'svelte/transition'\n    import { loadRecords } from './logic/data.js'\n    import { settings, formatText } from './store.js'\n    import Modal from \"./widgets/Modal.svelte\"\n    import { printPDF } from './logic/pdf.js'\n    const {shell} = require('electron')\n\n    const fs = require('fs')\n    const app = require('electron').remote.app\n\n    const root = app.getAppPath()\n\n    let sid = \"\"\n    let record = null\n\n    let currentRecord = {}\n    let recordModalOpen = false\n\n    let bodyData\n\n    function printDoc(data) {\n        let formattedData = [\n            { key: \"first name\", value: data.student.fname},\n            { key: \"last name\", value: data.student.lname},\n            { key: \"id\", value: data.student._id },\n            { key: \"date\", value: (new Date(data.dateUpdated).getMonth() + 1) + \"/\" + new Date(data.dateUpdated).getDate() + \"/\" + new Date(data.dateUpdated).getFullYear() },\n            { key: formatText($settings.services, true, false), value: data.accoms },\n            { key: formatText($settings.students, false, false) + \" notes\", value: data.studentNotes },\n        ]\n\n        printPDF(\" \", bodyData, \" \", formattedData).then(pdf=> {\n            fs.writeFileSync(root + '/accommodateData/target.pdf', pdf)\n            shell.openItem(root + \"/accommodateData/target.pdf\")\n        })\n        .catch(e=> {\n            console.log(e)\n            previewModalOpen = false\n            docErrorModalOpen = true\n        })\n\n        currentRecord = {}\n    }\n\n    onMount(()=>{\n        sid = window.location.hash.split('/')[1]\n        loadRecords(sid, $settings.databasedir).then((result)=> {\n            record = result\n        })\n\n        bodyData = fs.existsSync(root + '/accommodateData/body.accom') ? fs.readFileSync(root + '/accommodateData/body.accom') : \"\"\n    })\n\n</script>\n\n<style>\n#accoms-list {\n    width: 40em;\n}</style>\n\n{#if record}\n    <div style='position: relative;' in:fly={{x: 100, delay: 500}} out:fly={{x: 100}}>\n        <h2>Record for {record.student.lname + \", \" + record.student.fname + \" (\" + record.student._id + \")\"}</h2>\n        <a href=\"#students\">Back to {formatText($settings.students, true, false)}</a>\n        <h3>Current {formatText($settings.services, true, true)}</h3>\n        <ul>\n            {#if record.accoms && record.accoms.length}\n                {#each record.accoms as accom}\n                    <li>{accom.name}</li>\n                {/each}\n            {:else}\n                <li>None listed</li>\n            {/if}\n        </ul>\n\n        <h3>{formatText($settings.abbrev, false, false, true)} Documents</h3>\n        <ul>\n            {#if record.records && record.records.length}\n                {#each record.records as doc}\n                    <li>\n                        <a href={\"#record/\" + record.records._id} on:click|preventDefault={()=>{ currentRecord = doc; recordModalOpen = true }}>\n                            {\"Issued \" + (new Date(doc.dateUpdated).getMonth() + 1) + \"/\" + new Date(doc.dateUpdated).getDate() + \"/\" + new Date(doc.dateUpdated).getFullYear()}\n                        </a>\n                    </li>\n                {/each}\n            {:else}\n                <li>None listed</li>\n            {/if}\n        </ul>\n    </div>\n{/if}\n\n{#if recordModalOpen}\n    <Modal on:forceClose={()=>{ recordModalOpen = false; currentRecord = {} }}>\n        <h3>{new Date(currentRecord.dateUpdated).getMonth()+1 + \"/\" + new Date(currentRecord.dateUpdated).getDate() + \"/\" + new Date(currentRecord.dateUpdated).getFullYear()}</h3>\n        \n        <p class='mt-0'>\n            <strong>Date updated: </strong>{new Date(currentRecord.dateUpdated).getMonth()+1 + \"/\" + new Date(currentRecord.dateUpdated).getDate() + \"/\" + new Date(currentRecord.dateUpdated).getFullYear()}\n        </p>\n\n        <h4>{formatText($settings.students, false, true)} Information</h4>\n        <p class='mt-0'>\n            <strong>Name: </strong>{currentRecord.student.lname + \", \" + currentRecord.student.fname}\n            <br>\n            <strong>ID: </strong>{currentRecord.student._id}\n        </p>\n    \n        <h4>Approved {formatText($settings.services, true, true)}</h4>\n        <ul id='accoms-list'>\n            {#if currentRecord.accoms.length > 0}\n                {#each currentRecord.accoms as accom}\n                    <li class='whitebox'>\n                        <h4>{accom.name}</h4>\n                        <p>{accom.content}</p>\n                    </li>\n                {/each}\n            {:else}\n                <li>No {formatText($settings.services, true, false)} listed</li>\n            {/if}\n        </ul>\n    \n        <h4>{formatText($settings.students, false, true)} Notes</h4>\n        <p class='mt-0'>{currentRecord.studentNotes ? currentRecord.studentNotes : \"Nothing specified\"}</p>\n\n        <div class=\"align-ends\">\n            <button class='centered blue' type='submit' on:click|preventDefault={()=> {  recordModalOpen = false; currentRecord = {} } }>OK</button>\n            <button class='centered' type='submit' on:click|preventDefault={()=> {  recordModalOpen = false; printDoc(currentRecord) } }>Print</button>\n        </div>\n    </Modal>\n{/if}\n",
    "<script>\n    import { fly, scale } from 'svelte/transition'\n    import { settings, changeSettings, formatText } from './store.js'\n    import Modal from \"./widgets/Modal.svelte\"\n    const {dialog} = require('electron').remote\n    import {onMount} from 'svelte'\n    const fs = require('fs')\n    const app = require('electron').remote.app\n    const root = app.getAppPath()\n\n    const getFolder = (alter)=> {\n        dialog.showOpenDialog({\n            properties: ['openDirectory']\n        }).then(res=> {\n            if(res.filePaths[0] != undefined)\n                $settings[alter] = res.filePaths[0]\n        })\n    }\n    \n    let showPagesModal = false\n    let showBackupSuccessfulModal = false\n    let showRestoreSuccessfulModal = false\n    let clearDataModal = false\n    let showDeletedModal = false\n\n    let pages = [\n        {name: \"Write \" + formatText($settings.abbrev, false, false, true), value: \"#write\", selected: false},\n        {name: formatText($settings.students, true, true), selected: false, value: \"#students\"},\n        {name: formatText($settings.services, true, true), selected: false, value: \"#accommodations\"},\n        {name: formatText($settings.abbrev, false, false, true) + \" Template\", selected: false, value: \"#pdf\"},\n        {name: \"Settings\", selected: false, value: '#settings'},\n        {name: \"Reports\", selected: false, value: '#reports'},\n    ]\n\n    let saveTimeout = null\n    let curPassIndex = 0\n\n    let save = ()=> {\n        console.log('saving')\n        if(saveTimeout) clearTimeout(saveTimeout)\n        saveTimeout = setTimeout(()=> {\n            changeSettings($settings)\n        }, 3000)\n    }\n\n    let addPassword = ()=> {\n        if(!$settings.passwords) $settings.passwords = []\n        $settings.passwords.push({\n            password: \"\",\n            pages: []\n        })\n\n        $settings.passwords = $settings.passwords\n    }\n\n    let openPagesDialog = (password, index)=> {\n        //Clear selections\n        pages.forEach((page)=> {\n            //Deselect the page by default\n            page.selected = false\n\n            //If password object already has pages selected, select them in the pages array\n            if(password.pages) {\n                password.pages.forEach(pwordpage=>{\n                    if(pwordpage.name == page.name) {\n                        page.selected = true\n                    }\n                })\n            }\n        })\n        \n        curPassIndex = index\n        showPagesModal = true\n    }\n\n    let savePageSettings = ()=> {\n        $settings.passwords[curPassIndex].pages = pages.filter(page=>page.selected)\n        showPagesModal = false\n    }\n\n    function backup() {\n        let now = new Date()\n        let backupDate = (now.getMonth() + 1) + \".\" + now.getDate() + \".\" + now.getFullYear() + \"-\" + now.getTime()\n\n        if(!fs.existsSync($settings.backupdir + '/' + backupDate)) {\n            fs.mkdirSync($settings.backupdir + '/' + backupDate)\n        }\n\n        fs.copyFile($settings.databasedir + '/accoms.db', $settings.backupdir + '/' + backupDate + '/accoms.db', fs.constants.COPYFILE_EXCL, (err)=> {\n            if(err) throw(err)\n            fs.copyFile($settings.databasedir + '/loas.db', $settings.backupdir + '/' + backupDate + '/loas.db', fs.constants.COPYFILE_EXCL, (err)=> {\n                if(err) throw(err)\n                fs.copyFile($settings.databasedir + '/records.db', $settings.backupdir + '/' + backupDate + '/records.db', fs.constants.COPYFILE_EXCL, (err)=> {\n                    if(err) throw(err)\n                    showBackupSuccessfulModal = true\n                })\n            })\n        })\n    }\n\n    function restoreBackup() {\n        dialog.showOpenDialog({\n            properties: ['openDirectory'],\n            defaultPath: $settings.backupdir\n        }).then(res=> {\n            if(res.filePaths[0] != undefined) {\n                let restoreFrom = res.filePaths[0]\n\n                fs.copyFile(restoreFrom + \"/accoms.db\", $settings.databasedir + '/accoms.db', fs.constants.COPYFILE_FICLONE, (err)=> {\n                    if(err) throw(err)\n                    fs.copyFile(restoreFrom + \"/loas.db\", $settings.databasedir + '/loas.db', fs.constants.COPYFILE_FICLONE, (err)=> {\n                        if(err) throw(err)\n                        fs.copyFile(restoreFrom + '/records.db', $settings.databasedir + '/records.db', fs.constants.COPYFILE_FICLONE, (err)=> {\n                            if(err) throw(err)\n                            showRestoreSuccessfulModal = true\n                        })\n                    })\n                })\n            }\n        })\n    }\n\n    function clearData() {\n        clearDataModal = false\n        \n        fs.unlink($settings.databasedir + \"/accoms.db\", ()=> {\n            fs.unlink($settings.databasedir + \"/loas.db\", ()=> {\n                fs.unlink($settings.databasedir + \"/records.db\", ()=> {\n                    showDeletedModal = true\n                })\n            })\n        })\n    }\n\n    $: $settings, save()\n\n</script>\n\n<style>\n.select-pages {\n    cursor: pointer;\n}\n\n#pages-list {\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n    overflow-y: scroll;\n    list-style: none;\n    grid-gap: 1em;\n    padding-left: 0;\n    min-width: 30em;\n}\n\n#pages-list li {\n    background-color: #C33C54;\n    color: white;\n    padding: .5em;\n    text-align: center;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n#pages-list li:hover {\n    -webkit-filter: brightness(1.2);\n            filter: brightness(1.2);\n}\n\n#pages-list li.selected {\n    background-color: #8EE3EF;\n    color: #37718E;\n    font-weight: bold;\n}</style>\n\n<div style='position: relative;' in:fly={{x: 100, delay: 500}} out:fly={{x: 100}}>\n    <h2>Settings</h2>\n    <h3>Terminology</h3>\n    <p>What do you call the document this app helps you to create? (Use an abbreviation or common name if possible; for example, \"LOA\" for \"Letter of Accommodation\")</p>\n    <input type=\"text\" bind:value={$settings.abbrev}>\n    \n    <p>What do you call the services you provide? (eg accommodations, services, supports)</p>\n    <input type=\"text\" bind:value={$settings.services}>\n    \n    <p>What do you call the people you serve? (eg students, clients, customers)</p>\n    <input type=\"text\" bind:value={$settings.students}>\n\n    <h2>Security</h2>\n    <p>You can set up passwords for the various pages of Accommodate to implement nominal security. <strong>This is not strong security, and will not prevent access to a determined attacker.</strong> All settings can be overridden easily by altering app files. It is expected that this app will be stored in a location with sufficient access restrictions. This password system is only meant to discourage accidental alteration to app settings and data by unauthorized (but non-malicious) users.</p>\n    {#if $settings.passwords}\n        {#each $settings.passwords as password, i}\n            <div class='passwords whitebox'>\n                <input type='text' placeholder=\"Password\" bind:value={password.password} on:change={()=>{$settings = $settings}}>\n                <input type=\"text\" class='select-pages' placeholder='Pages' value={password.pages.map(el => el.name).join(', ')} on:click={()=>{openPagesDialog(password, i)}} readonly>\n                <div class='close' on:click={()=>{ $settings.passwords.splice(i,1); $settings = $settings }}>&times;</div>\n            </div>\n        {/each}\n    {/if}\n    <button type='submit' class='blue' on:click|preventDefault={addPassword}>Add password</button>\n\n    <h2>Data</h2>\n    <h3>Sources</h3>\n    <p>The database files for this app are located here: <a href='changepath' on:click|preventDefault={()=>{getFolder('databasedir')}}>{$settings.databasedir}</a></p>\n    <p>The database backups are located here: <a href='changepath' on:click|preventDefault={()=>{getFolder('backupdir')}}>{$settings.backupdir}</a></p>\n    <h3>Manage Data</h3>\n    <!-- <p><button type='submit' class='blue' on:click|preventDefault={()=>{}}>Import data</button>You can import data <em>en masse</em> by loading a CSV file. Records with no specified ID will be assigned one; records with IDs that already exist will be replaced by the imported data. CSV files can be created in most spreadsheet programs, including Microsoft Excel.</p> -->\n    <div class=\"inline\">\n        <button type='submit' class='blue' on:click|preventDefault={backup}>Back up data</button>\n        <button type='submit' class='blue' on:click|preventDefault={restoreBackup}>Restore backup</button>\n        <button type='submit' on:click|preventDefault={()=>{ clearDataModal = true }}>Clear data</button>\n    </div>\n</div>\n\n{#if showPagesModal}\n    <Modal on:forceClose={()=>{ showPagesModal = false }}>\n        <h3>Select {formatText($settings.services, true, true)}</h3>\n        <ul id='pages-list'>\n            {#each pages as page}\n                <li class:selected={page.selected} on:click={()=>{page.selected = !page.selected; $settings = $settings }}>{page.name}</li>\n            {/each}\n        </ul>\n        <button class='centered blue' type='submit' on:click|preventDefault={savePageSettings}>OK</button>\n    </Modal>\n{/if}\n\n{#if showBackupSuccessfulModal}\n    <Modal on:forceClose={()=>{ showBackupSuccessfulModal = false }}>\n        <h3>Backup Successful</h3>\n        <p>All data has been backed up to a folder marked with the current date and time.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={()=> { showBackupSuccessfulModal = false}}>OK</button>\n    </Modal>\n{/if}\n\n{#if showRestoreSuccessfulModal}\n    <Modal on:forceClose={()=>{ showRestoreSuccessfulModal = false }}>\n        <h3>Restore Successful</h3>\n        <p>All data has been restored from the selected folder.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={()=> { showRestoreSuccessfulModal = false}}>OK</button>\n    </Modal>\n{/if}\n\n{#if clearDataModal}\n    <Modal on:forceClose={()=>{ clearDataModal = false }}>\n        <h3>Clear Data?</h3>\n        <p>We strongly recommend that you <strong>back up your data first</strong> before clearing the database.</p>\n        <div class=\"centered inline\">\n            <button type='submit' on:click|preventDefault={clearData}>Clear Data</button>\n            <button class='blue' type='submit' on:click|preventDefault={()=> { clearDataModal = false}}>Cancel</button>\n        </div>\n    </Modal>\n{/if}\n\n{#if showDeletedModal}\n    <Modal on:forceClose={()=>{ showDeletedModal = false }}>\n        <h3>Data Deletion Successful</h3>\n        <p>All data has been cleared from the database.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={()=> { showDeletedModal = false}}>OK</button>\n    </Modal>\n{/if}",
    "<script>\n    import { onMount } from 'svelte'\n    import { fly, scale } from 'svelte/transition'\n    import {abbreviate, loadStudents, saveStudent, removeStudent, countStudents} from './logic/data.js'\n    import Fuse from 'fuse.js'\n    import { settings, formatText } from './store.js'\n\n    import Modal from \"./widgets/Modal.svelte\"\n\n    let studs = []\n    let searchResults = []\n\n    let studCreatorOpen = false\n    let showConfirmModal = false\n    let showDeleteConfirmModal = false\n\n    let searchTimeout = null\n    let searchBox = null\n    let studContentHighlighted = false\n\n    let resultsPerPage = 10\n    let page = 0\n    let studentCount = 0\n\n    let newStud = {\n        fname: \"\", lname: \"\", _id: \"\"\n    }\n    let toDelete = \"\"\n\n    let fuse = null\n\n    let save = ()=> {\n        saveStudent(newStud, $settings.databasedir).then(()=>{\n            searchTime(searchBox.value, 0)\n        })\n    }\n\n    let searchTime = (search, timeout = 600)=> {\n        return new Promise((resolve)=>{\n            if(searchTimeout) clearTimeout(searchTimeout)\n            searchTimeout = setTimeout(()=>{\n                loadStudents(resultsPerPage * page, resultsPerPage, search, $settings.databasedir).then((studsLoaded)=>{\n\n                    countStudents($settings.databasedir).then((count)=> {\n                        studentCount = count\n                    })\n\n                    studs = studsLoaded\n                    studCreatorOpen = false\n                    newStud = {\n                        fname: \"\", lname: \"\", _id: \"\"\n                    }\n\n                    fuse = new Fuse(studs, { keys: [\"student.fname\", \"student.lname\", \"student._id\"] })\n\n                    if(search == \"\")\n                        searchResults = studs\n                    else\n                        searchResults = fuse.search(search)\n\n                    resolve(true)\n                })\n            }, timeout)\n        })\n    }\n\n    let removeStud = (id)=> {\n        toDelete = id\n        showConfirmModal = true\n    }\n\n    let deleteConfirm = (id) => {\n        removeStudent(id, $settings.databasedir).then(()=>{\n            toDelete = \"\"\n            showDeleteConfirmModal = true\n            showConfirmModal = false\n\n            searchTime(searchBox.value, 0)\n        })\n    }\n\n</script>\n\n<style>\n.student a {\n    display: block;\n    margin-top: .5em;\n    text-align: right;\n    position: relative;\n    left: 2em;\n}\n\n.pagination {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    margin: .5em auto;\n    align-items: center;\n}\n\n.controls {\n    font-size: 1.5em;\n}\n\n.controls a {\n    text-decoration: none;\n}</style>\n\n{#await searchTime(\"\", 0)}\n    <div class='loading'>Loading...</div>\n{:then}\n    <div style='position: relative;' in:fly={{x: 100, delay: 500}} out:fly={{x: 100}}>\n        <div class='switchable'>\n            <h2>{formatText($settings.students, true, true)}</h2>\n        </div>\n        <div class='form-halves'>\n            <label for=\"search\">Find: </label>\n            <input bind:this={searchBox} type=\"text\" id='search' on:keyup={()=>{searchTime(searchBox.value)}}>\n        </div>\n        <div>Search by name or ID.</div>\n        <div class=\"mt-2 mb-1\">\n            <a href=\"newStud\" on:click|preventDefault={()=>{studCreatorOpen = true}}>New {formatText($settings.students, false, false)}</a>\n        </div>\n\n        <div class=\"pagination\">\n            <div class='controls'>\n                <a href=\"firstpage\" on:click|preventDefault={()=>{ page = 0; searchTime(searchBox.value, 0) }}>&laquo;</a>\n                <a href=\"prevpage\" on:click|preventDefault={()=>{ page > 0 ? page -= 1 : page = 0; searchTime(searchBox.value, 0) }}>&lsaquo;</a>\n            </div>\n            <div>Results {resultsPerPage * page + 1} - {(resultsPerPage * page + resultsPerPage) < studentCount ? (studentCount * page + resultsPerPage) : studentCount}</div>\n            <div class='controls'>\n                <a href=\"nextpage\" on:click|preventDefault={()=>{ page < Math.floor(studentCount / resultsPerPage) ? page += 1 : page = Math.floor(studentCount / resultsPerPage); searchTime(searchBox.value, 0) }}>&rsaquo;</a>\n                <a href=\"lastpage\" on:click|preventDefault={()=>{ page = Math.floor(studentCount / resultsPerPage); searchTime(searchBox.value, 0) }}>&raquo;</a>\n            </div>\n        </div>\n        \n        {#if searchResults.length}\n            {#each searchResults as loa}\n                <div class='student whitebox'>\n                    <h4>{loa.student.lname + \", \" + loa.student.fname + \" (\" + loa.student._id + \")\"}</h4>\n                    <p>{abbreviate(\"Current accommodations: \" + ((loa.accomsList && loa.accomsList.length) ? loa.accomsList.join(\", \") : \"none listed\"), 200)}</p>\n                    <a href={\"#record/\" + loa.student._id}>See record</a>\n                    <div class='close' on:click={()=>{ removeStud(loa.student._id) }}>&times;</div>\n                    <div class='close edit' on:click={()=>{ newStud = loa.student; studCreatorOpen = true }}>&#9998;</div>\n                </div>\n            {/each}\n        {:else}\n            <p>No {formatText($settings.students, true, false)} found. :-(</p>\n        {/if}\n    </div>\n{/await}\n\n{#if studCreatorOpen}\n    <Modal on:forceClose={()=>{ studCreatorOpen = false; newStud = { fname: \"\", lname: \"\", _id: \"\" } }}>\n        <h3>{formatText($settings.students, false, true)} Details</h3>\n        <form id='new-stud-form'>\n            <div class=\"form-halves\">\n                <label for='fname'>First name</label>\n                <input type=\"text\" id='fname' bind:value={newStud.fname}>\n            </div>\n            <div class=\"form-halves\">\n                <label for='fname'>Last name</label>\n                <input type=\"text\" id='fname' bind:value={newStud.lname}>\n            </div>\n            <div class=\"form-halves\">\n                <label for='id'>{formatText($settings.students, false, true)} ID</label>\n                <input type=\"text\" id='id' bind:value={newStud._id}>\n            </div>\n\n            <button class='centered blue' type='submit' on:click|preventDefault={()=> {save(); studCreatorOpen = false} }>OK</button>\n        </form>\n    </Modal>\n{/if}\n\n{#if showConfirmModal}\n    <Modal on:forceClose={()=>{ showConfirmModal = false; toDelete = \"\" }}>\n        <h3>Are you sure?</h3>\n        <p>If you delete this {formatText($settings.students, false, false)}, it will not be recoverable. This will not affect {formatText($settings.students, false, false)}'s committed {formatText($settings.services, false, false)} history.</p>\n        <div class=\"align-ends\">\n            <button class='centered' type='submit' on:click|preventDefault={()=> { deleteConfirm(toDelete) }}>Delete it</button>\n            <button class='centered blue' type='submit' on:click|preventDefault={()=> {  showConfirmModal = false; toDelete = \"\" } }>Never mind</button>\n        </div>\n    </Modal>\n{/if}\n\n{#if showDeleteConfirmModal}\n    <Modal on:forceClose={()=>{ showDeleteConfirmModal = false }}>\n        <h3>All done!</h3>\n        <p>The indicated student has been removed from the list.</p>\n        <button class='centered blue' type='submit' on:click|preventDefault={()=> {  showDeleteConfirmModal = false } }>OK</button>\n    </Modal>\n{/if}",
    "<script>\n    import { onMount } from 'svelte'\n    import { fly, scale } from 'svelte/transition'\n    import SortableList from 'svelte-sortable-list'\n    import { cubicOut } from \"eases-jsnext\"\n    import { abbreviate, saveLOA, loadLOA, searchLOA, loadAccommodations} from './logic/data.js'\n    import { settings, formatText } from './store.js'\n\n    import { createEventDispatcher } from 'svelte';\n    const dispatch = createEventDispatcher()\n\n    import Datepicker from 'svelte-calendar'\n    import Modal from \"./widgets/Modal.svelte\"\n\n    //This takes element position into account\n    function flyModified(\n        node,\n        {\n            delay = 0,\n            duration = 400,\n            easing = cubicOut,\n            x = 0,\n            y = 0,\n            position = \"relative\"\n        }\n    ) {\n        const style = getComputedStyle(node);\n        const opacity = +style.opacity;\n        const transform = style.transform === \"none\" ? \"\" : style.transform;\n\n        return {\n        delay,\n        duration,\n        easing,\n        css: t => `\n            transform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n            opacity: ${t * opacity};\n            position: ${position};`\n        };\n    }\n\n    class extDate extends Date {\n        addDays(days) {\n            let date = new extDate(this.valueOf())\n            date.setDate(date.getDate() + days)\n            return date\n        }\n    }\n\n    let LOAnew = true\n    let abs1 = false\n    let abs2 = false\n\n    let showSearchModal = false\n    let showSearchListModal = false\n    let showOverwriteModal = false\n    let showSavedModal = false\n    let showFormErrorModal = false\n    let showAccomsModal = false\n\n    let searchResults = []\n\n    let student = {\n        fname: \"\",\n        lname: \"\",\n        _id: \"\"\n    }\n\n    let searchStud = {\n        fname: \"\",\n        lname: \"\",\n        _id: \"\"\n    }\n\n    let accoms = []\n    let studentNotes = \"\"\n    let dateIssued = new Date(Date.now())\n    let dateIssuedNext = dateIssued\n    $: dateIssuedNext = new extDate(dateIssued).addDays(1)\n    let dateUpdated = new Date(Date.now())\n\n    let sortAccoms = ev=> { selectedAccoms = ev.detail }\n\n    $: selectedAccoms = accoms.length ? accoms.filter((accom)=>{ return accom.selected === true }) : []\n\n    let studentNotesHighlighted = false\n\n    $: disableUpdated = dateIssued.getMonth() == new Date(Date.now()).getMonth() && dateIssued.getDate() == new Date(Date.now()).getDate() && dateIssued.getFullYear() == new Date(Date.now()).getFullYear()\n\n    let months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"November\",\n        \"December\"\n    ]\n\n    let style = \"margin: 0;\"\n    let studentNotesTextarea = null\n\n    let writeNewLOA = ()=> {\n        showSearchModal = false\n        clear()        \n    }\n\n    let searchForStudent = ()=> {\n        searchStud = {\n            fname: \"\",\n            lname: \"\",\n            _id: \"\"\n        }\n        showSearchModal = true\n    }\n    \n    let save = (upsert=false)=> {\n        //Trim and uc relevant form fields\n        student.lname = student.lname.trim()\n        student.fname = student.fname.trim()\n        student.lname = student.lname.substr(0,1).toUpperCase() + student.lname.substr(1)\n        student.fname = student.fname.substr(0,1).toUpperCase() + student.fname.substr(1)\n\n        //Validate form first!\n        if(student.fname.length < 2 ||\n            student.lname.length < 2 ||\n            student._id.length < 2 ||\n            accoms.length < 1\n        )\n        {\n            showFormErrorModal = true\n            return\n        }\n\n        if(!upsert) {\n            loadLOA(student, $settings.databasedir).then((existing)=>{\n                if(existing != null) {\n                    showOverwriteModal = true\n                }\n                else {\n                    saveLOA({ student, accoms: selectedAccoms, studentNotes, dateUpdated, dateIssued }, $settings.databasedir).then(()=>{\n                        showSavedModal = true\n                    })\n                }\n            })\n        }\n        else saveLOA({ student, accoms: selectedAccoms, studentNotes, dateUpdated, dateIssued }, $settings.databasedir).then(()=>{\n            showSavedModal = true\n        })\n    }\n\n    let endSave = ()=> {\n        clear()\n        showSavedModal = false\n    }\n\n    let loadStudent = (inputstudent)=> {\n        loadLOA(inputstudent, $settings.databasedir).then((result)=>{\n            student = result.student || {}\n            accoms.forEach((accom)=>{\n                accom.selected = (()=> { \n                    let returnVal = false\n                    if(result.accoms) {\n                        result.accoms.forEach((raccom)=>{\n                            if(accom._id == raccom._id) {\n                                returnVal = true\n                            }\n                        })\n                    }\n                    return returnVal\n                })()\n            })\n\n            selectedAccoms = selectedAccoms = accoms.filter((accom)=>{ return accom.selected === true })\n            studentNotes = result.studentNotes || \"\"\n            dateIssued = result.dateIssued || new Date()\n            dateUpdated = result.dateUpdated || new Date()\n\n            LOAnew = false\n            showSearchListModal = false\n        })\n    }\n\n    let search = ()=> {\n        searchLOA(searchStud, $settings.databasedir).then(\n            (value)=> {\n                searchResults = value\n                showSearchModal = false\n                showSearchListModal = true\n            }\n        )\n    }\n\n    let clear = ()=> {\n        student = {\n            fname: \"\",\n            lname: \"\",\n            _id: \"\"\n        }\n\n        accoms.forEach((accom)=> {\n            accom.selected = false\n        })\n        selectedAccoms = []\n        studentNotes = \"\"\n\n        LOAnew = true\n\n        dateIssued = new Date(Date.now())\n        dateUpdated = new Date(Date.now())\n\n        dispatch('scrollUp')\n    }\n\n    onMount(()=> {\n        loadAccommodations($settings.databasedir).then((loadedAccoms)=>{\n            accoms = loadedAccoms\n        })\n    })\n\n    let accomCreatorOpen = false\n    let accomContentHighlighted = false\n    let newAccom = {}\n\n    let addCustomAccom = ()=> {\n        showAccomsModal = false\n        newAccom = {\n            name: \"\",\n            content: \"\",\n            selected: true\n        }\n        accomCreatorOpen = true\n    }\n\n    let setCustomAccom = ()=> {\n        accomCreatorOpen = false\n        accoms.push({...newAccom, _id: accoms.length + 1})\n        accoms = accoms\n    }\n\n</script>\n\n<style>\n\ninput {\n    z-index: 0;\n}\n\nbutton.just-text {\n    background-color: transparent;\n    border: none;\n    margin: 0; padding: 0;\n    font-size: 1em;\n}\n\ntextarea {\n    width: 100%;\n    display: block;\n}\n\n#student-notes-container {\n    position: relative;\n}\n\n.inline-buttons button {\n    display: inline;\n}\n\n.selectables li {\n    cursor: pointer;\n    color: #C33C54;\n}\n\n.selectables li:hover {\n    text-decoration: underline;\n}\n\n.switchable {\n    width: 100%;\n    top: 0;\n    left: 0;\n}\n\n.switchable h2 {\n    margin-top: 0;\n    padding-top: 1.5em;\n}\n\n#accoms-modal-list {\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n    overflow-y: scroll;\n    list-style: none;\n    grid-gap: 1em;\n    padding-left: 0;\n    min-width: 30em;\n}\n\n#accoms-modal-list li {\n    background-color: #C33C54;\n    color: white;\n    padding: .5em;\n    text-align: center;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n#accoms-modal-list li:hover {\n    -webkit-filter: brightness(1.2);\n            filter: brightness(1.2);\n}\n\n#accoms-modal-list li.selected {\n    background-color: #8EE3EF;\n    color: #37718E;\n    font-weight: bold;\n}\n\n.accommodation {\n    cursor: move;\n}\n\n#new-accom-form textarea { display: block; margin: 0; min-height: 15vh; }\n\n.form-halves2 {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: .5em;\n}\n\n.form-halves2 label {\n    margin-right: 1em;\n}\n\n.form-halves2 input {\n    flex-grow: 2;\n}\n\n.accom-content-wrapper {\n    position: relative;\n}\n\n.extend {\n    width: 20em;\n}</style>\n\n<div style='position: relative;' in:fly={{x: 100, delay: 500}} out:fly={{x: 100}}>\n    {#if LOAnew}\n        <div class='switchable' in:fly|local={{x: 100, delay: 500}} out:flyModified|local={{x: 100, position: 'absolute'}}>\n            <h2>Issue a New {formatText($settings.abbrev, false, false, true)}</h2>\n            <p class='mt-0'>...or <button class='just-text' on:click={searchForStudent}>search for an existing one</button>.</p>\n        </div>\n    {:else}\n        <div class='switchable' in:fly|local={{x: 100, delay: 500}} out:flyModified|local={{x: 100, position: 'absolute'}}>\n            <h2>Edit {student.fname}'s {formatText($settings.abbrev, false, false, true)}</h2>\n            <p class='mt-0'>...or <button class='just-text' on:click={writeNewLOA}>write a new one</button>.</p>\n        </div>\n    {/if}    \n    <form>\n        <div class=\"form-halves\">\n            <label for=\"issued\">Date</label>\n            <Datepicker style={style} start={new Date(2020, 0, 1)} end={new Date(Date.now())} bind:selected={dateUpdated}>\n                <input type='text' value={months[new Date(Date.now()).getMonth()] + \" \" + new Date(Date.now()).getDate() + \", \" + dateUpdated.getFullYear()}>\n            </Datepicker>\n        </div>\n\n        <h3>{formatText($settings.students, false, true)} Information</h3>\n        <div class=\"form-halves\">\n            <label for=\"fname\">First Name</label>\n            <input type=\"text\" id='fname' bind:value={student.fname} maxlength='100'>\n        </div>\n        <div class=\"form-halves\">\n            <label for=\"lname\">Last Name</label>\n            <input type=\"text\" id='lname' bind:value={student.lname} maxlength='100'>\n        </div>\n        <div class=\"form-halves\">\n            <label for=\"sid\">ID#</label>\n            <input type=\"text\" id='sid' bind:value={student._id} maxlength='20'>\n        </div>\n    \n        <div style='position: relative;'>\n            <h3>Approved {formatText($settings.services, true, true)}</h3>\n            <ul id='accoms-list'>\n                {#if selectedAccoms.length > 0}\n                    <!-- {#each selectedAccoms as accom}\n                        <li class='whitebox '>\n                            {#if accom.type && accom.type == 'editable'}\n                                <input type='text' class='h4' bind:value={accom.name} placeholder=\"Custom Accommodation Title\">\n                                <input type='text' bind:value={accom.content} placeholder=\"Custom accommodation description\">\n                            {:else}\n                                <h4>{accom.name}</h4>\n                                <p>{abbreviate(accom.content, 150)}</p>\n                            {/if}\n                            <div class='close' on:click={()=>{ accom.selected = false; accoms = accoms }}>&times;</div>\n                        </li>\n                    {/each} -->\n                    <SortableList \n                        list={selectedAccoms} \n                        key=\"_id\"\n                        on:sort={sortAccoms} \n                        let:item\n                        let:index>\n                        <li class=\"whitebox accommodation\">\n                            <h4>{item.name}</h4>\n                            <p>{abbreviate(item.content, 150)}</p>\n                            <div class='close' on:click={()=>{ item.selected = false; accoms = accoms }}>&times;</div>\n                        </li>\n                    </SortableList>\n                    <li><a href='addAccom' on:click|preventDefault={()=>{ showAccomsModal = true }}>Add more</a></li>\n                {:else}\n                    <li>No {formatText($settings.services, true, false)} listed - <a href='addAccom' on:click|preventDefault={()=>{ showAccomsModal = true }}>add some!</a></li>\n                {/if}\n            </ul>\n        </div>\n    \n        <h3>{formatText($settings.students, false, true)} Notes</h3>\n        <div id='student-notes-container'>\n            {#if studentNotesHighlighted}\n                <div transition:scale class='remaining-characters'>\n                    { studentNotes ? 250 - studentNotes.length : 250}\n                </div>\n            {/if}\n            <textarea bind:this={studentNotesTextarea} name=\"student-notes\" id=\"student-notes\" rows=\"5\" maxlength=\"250\" on:focus={()=>{studentNotesHighlighted = true}} on:blur={()=>{studentNotesHighlighted = false}} bind:value={studentNotes}></textarea>\n        </div>\n\n        <div class=\"inline-buttons\">\n            <button class='blue' type='submit' on:click|preventDefault={()=>{save()}}>Issue</button>\n            <button type='submit' on:click|preventDefault={()=>{clear()}}>Clear</button>\n        </div>\n    </form>\n\n\n    <!-- MODAL -->\n    {#if showSearchModal}\n        <Modal on:forceClose={()=>{ showSearchModal = false; }}>\n            <h3>Find a {formatText($settings.students, false, true)}</h3>\n            <p>Search by ID or first and last name.</p>\n            <form>\n                <div class=\"form-halves\">\n                    <label for=\"search-id\">ID#</label>\n                    <input id='search-id' type=\"text\" bind:value={searchStud._id} maxlength='20'>\n                </div>\n                <div class=\"form-halves\">\n                    <label for=\"search-fname\">First Name</label>\n                    <input id='search-fname' type=\"text\" bind:value={searchStud.fname} maxlength='100'>\n                </div>\n                <div class=\"form-halves\">\n                    <label for=\"search-lname\">Last Name</label>\n                    <input id='search-lname' type=\"text\" bind:value={searchStud.lname} maxlength='100'>\n                </div>\n\n                <button class='centered blue' type='submit' on:click|preventDefault={search}>Find them!</button>\n            </form>\n        </Modal>\n    {/if}\n\n    {#if showOverwriteModal}\n        <Modal on:forceClose={()=>{ showOverwriteModal = false }}>\n            <h3>Found an existing {formatText($settings.students, false, false)}!</h3>\n            <p>A {formatText($settings.students, false, false)} with that ID already exists. Do you want to issue a new {formatText($settings.abbrev, false, false, true)} for them?</p>\n                <div class=\"align-ends\">\n                    <button class='centered' type='submit' on:click|preventDefault={()=> {save(true); showOverwriteModal = false} }>Yes</button>\n                    <button class='centered blue' type='submit' on:click|preventDefault={()=> {showOverwriteModal = false} }>No</button>\n                </div>\n        </Modal>\n    {/if}\n\n    {#if showSearchListModal}\n        <Modal on:forceClose={()=> { showSearchListModal = false; }}>\n            <h3>Results</h3>\n            {#if searchResults.length == 0}\n                <p>No results were found. :-(</p>\n            {:else}\n                <p>We found the following {formatText($settings.students, true, false)}:</p>\n                <ul class='selectables'>\n                {#each searchResults as result}\n                    <li on:click={()=>{ loadStudent(result.student) }}>{result.student.lname}, {result.student.fname} - {result.student._id}</li>\n                {/each}\n                </ul>\n            {/if}\n            <button class='centered' type='submit' on:click|preventDefault={()=> { showSearchListModal = false; showSearchModal = true; }}>Back</button>\n        </Modal>\n    {/if}\n\n    {#if showSavedModal}\n        <Modal on:forceClose={()=> { endSave() }}>\n            <h3>Saved!</h3>\n            <p>You saved {student.fname} {student.lname}'s {formatText($settings.abbrev, false, false, true)}.</p>\n            <button class='centered blue' type='submit' on:click|preventDefault={ ()=> {endSave()} }>OK</button>\n        </Modal>\n    {/if}\n\n    {#if showFormErrorModal}\n        <Modal on:forceClose={()=> { showFormErrorModal = false }}>\n            <h3>Whoops!</h3>\n            <p>Looks like you didn't fill in all the {formatText($settings.students, false, false)}'s information. Also make sure that you've added all the {formatText($settings.services, true, false)} the {formatText($settings.students, false, false)} needs.</p>\n            <button class='centered blue' type='submit' on:click|preventDefault={ ()=> {showFormErrorModal = false} }>OK</button>\n        </Modal>\n    {/if}\n\n    {#if showAccomsModal}\n        <Modal on:forceClose={()=>{ showAccomsModal = false }}>\n            <h3>Select {formatText($settings.services, true, true)}</h3>\n            <ul id='accoms-modal-list'>\n                {#each accoms as accom}\n                    <li class:selected={accom.selected} on:click={()=>{accom.selected = !accom.selected }}>{abbreviate(accom.name, 25)}</li>\n                {/each}\n            </ul>\n            <p>...or <a href=\"custom\" on:click|preventDefault={addCustomAccom}>add a custom {formatText($settings.services, false, false)}.</a></p>\n            <button class='centered blue' type='submit' on:click|preventDefault={ ()=> {showAccomsModal = false} }>OK</button>\n        </Modal>\n    {/if}\n\n    {#if accomCreatorOpen}\n        <Modal on:forceClose={()=>{ accomCreatorOpen = false; newAccom = { name: \"\", content: \"\" } }}>\n            <h3 class='extend'>{formatText($settings.services, false, true)} Details</h3>\n            <form id='new-accom-form'>\n                <div class=\"form-halves2\">\n                    <label for='name'>Name</label>\n                    <input type=\"text\" id='name' bind:value={newAccom.name}>\n                </div>\n                <div class=\"in\">\n                    <label for=\"content\">Content</label><br/>\n                    <div class=\"accom-content-wrapper\">\n                        {#if accomContentHighlighted}\n                            <div transition:scale class='remaining-characters'>\n                                { newAccom.content.length ? 1200 - newAccom.content.length : 1200}\n                            </div>\n                        {/if}\n                        <textarea type=\"text\" id='content' bind:value={newAccom.content} rows=\"5\" maxlength=\"1200\" on:focus={()=>{accomContentHighlighted = true}} on:blur={()=>{accomContentHighlighted = false}}></textarea>\n                    </div>\n                </div>\n\n                <button class='centered blue' type='submit' on:click|preventDefault={()=> {setCustomAccom()} }>OK</button>\n            </form>\n        </Modal>\n    {/if}\n</div>",
    "<script>\n    import {scale, fade} from 'svelte/transition'\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher()\n</script>\n\n<style lang='scss' type='text/postcss'>.modal-background {\n  background-color: rgba(37,78,112,0.8);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100; }\n\n.modal-inner {\n  background-color: white;\n  min-width: 20em;\n  padding: 1em;\n  border-radius: .25em;\n  position: relative; }\n\n.modal-inner .inner {\n  margin: 0 auto; }\n\n.close {\n  position: absolute;\n  top: 0;\n  right: .5em;\n  color: gray;\n  font-size: 2em;\n  cursor: pointer; }\n\n.close:hover {\n  color: #C33C54; }</style>\n\n\n<div class='modal-background' in:fade={{duration: 300}} out:fade={{duration: 300, delay: 150}}>\n    <div class='modal-inner top-border-secondary' on:click|stopPropagation in:scale={{duration: 150, delay: 200}} out:scale={{duration: 150}}>\n        <div class='close' on:click={()=>{dispatch('forceClose')}}>&times;</div>\n        \n        <div class=\"inner\">\n            <slot>No content specified</slot>\n        </div>\n    </div>\n</div>"
  ],
  "names": [],
  "mappings": "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"
}